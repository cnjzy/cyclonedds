/****************************************************************

  Generated by Eclipse Cyclone DDS IDL to C Translator
  File name: RealtimeNetMontorData.h
  Source: D:\wl\code\dds\DDSLibrary\build64\bin\Debug\RealtimeNetMontorData.idl
  Cyclone DDS: V0.10.4

*****************************************************************/
#ifndef DDSC_REALTIMENETMONTORDATA_H
#define DDSC_REALTIMENETMONTORDATA_H

#include "dds/ddsc/dds_public_impl.h"

#ifdef __cplusplus
extern "C" {
#endif

typedef struct RealtimeNetMonitor_Req
{
  int32_t seq;
} RealtimeNetMonitor_Req;

extern const dds_topic_descriptor_t RealtimeNetMonitor_Req_desc;

#define RealtimeNetMonitor_Req__alloc() \
((RealtimeNetMonitor_Req*) dds_alloc (sizeof (RealtimeNetMonitor_Req)));

#define RealtimeNetMonitor_Req_free(d,o) \
dds_sample_free ((d), &RealtimeNetMonitor_Req_desc, (o))

typedef struct RealtimeNetMonitor_Res
{
  int32_t processId;
  int32_t threadId;
  char ip;
} RealtimeNetMonitor_Res;

extern const dds_topic_descriptor_t RealtimeNetMonitor_Res_desc;

#define RealtimeNetMonitor_Res__alloc() \
((RealtimeNetMonitor_Res*) dds_alloc (sizeof (RealtimeNetMonitor_Res)));

#define RealtimeNetMonitor_Res_free(d,o) \
dds_sample_free ((d), &RealtimeNetMonitor_Res_desc, (o))

typedef struct RealtimeNetMonitor_Topic
{
  int32_t size;
  int32_t status;
  char * name;
} RealtimeNetMonitor_Topic;

extern const dds_topic_descriptor_t RealtimeNetMonitor_Topic_desc;

#define RealtimeNetMonitor_Topic__alloc() \
((RealtimeNetMonitor_Topic*) dds_alloc (sizeof (RealtimeNetMonitor_Topic)));

#define RealtimeNetMonitor_Topic_free(d,o) \
dds_sample_free ((d), &RealtimeNetMonitor_Topic_desc, (o))

#ifndef DDS_SEQUENCE_REALTIMENETMONITOR_TOPIC_DEFINED
#define DDS_SEQUENCE_REALTIMENETMONITOR_TOPIC_DEFINED
typedef struct dds_sequence_RealtimeNetMonitor_Topic
{
  uint32_t _maximum;
  uint32_t _length;
  struct RealtimeNetMonitor_Topic *_buffer;
  bool _release;
} dds_sequence_RealtimeNetMonitor_Topic;

#define dds_sequence_RealtimeNetMonitor_Topic__alloc() \
((dds_sequence_RealtimeNetMonitor_Topic*) dds_alloc (sizeof (dds_sequence_RealtimeNetMonitor_Topic)));

#define dds_sequence_RealtimeNetMonitor_Topic_allocbuf(l) \
((struct RealtimeNetMonitor_Topic *) dds_alloc ((l) * sizeof (struct RealtimeNetMonitor_Topic)))
#endif /* DDS_SEQUENCE_REALTIMENETMONITOR_TOPIC_DEFINED */

typedef struct RealtimeNetMonitor_Node
{
  int32_t processId;
  int32_t threadId;
  char * ip;
  dds_sequence_RealtimeNetMonitor_Topic topicList;
} RealtimeNetMonitor_Node;

extern const dds_topic_descriptor_t RealtimeNetMonitor_Node_desc;

#define RealtimeNetMonitor_Node__alloc() \
((RealtimeNetMonitor_Node*) dds_alloc (sizeof (RealtimeNetMonitor_Node)));

#define RealtimeNetMonitor_Node_free(d,o) \
dds_sample_free ((d), &RealtimeNetMonitor_Node_desc, (o))

#ifdef __cplusplus
}
#endif

#endif /* DDSC_REALTIMENETMONTORDATA_H */
